package com.bytedance.p1112i.p1113a;

import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import com.bytedance.covode.number.Covode;
import com.bytedance.p1084h.AbstractC15287a;

/* renamed from: com.bytedance.i.a.u */
public class C16035u extends AbstractC15287a {
    static {
        Covode.recordClassIndex(18301);
    }

    @Override // com.bytedance.p1084h.AbstractC15287a
    /* renamed from: a */
    public final void mo24794a() {
        this.f37302c.moveTo(25.5f, 6.5f);
        this.f37302c.cubicTo(25.5f, 7.32843f, 24.8284f, 8.0f, 24.0f, 8.0f);
        this.f37302c.cubicTo(23.1716f, 8.0f, 22.5f, 7.32843f, 22.5f, 6.5f);
        this.f37302c.cubicTo(22.5f, 5.67157f, 23.1716f, 5.0f, 24.0f, 5.0f);
        this.f37302c.cubicTo(24.8284f, 5.0f, 25.5f, 5.67157f, 25.5f, 6.5f);
        this.f37302c.close();
        this.f37302c.moveTo(13.0f, 24.0f);
        this.f37302c.cubicTo(13.0f, 17.9249f, 17.9249f, 13.0f, 24.0f, 13.0f);
        this.f37302c.cubicTo(30.0751f, 13.0f, 35.0f, 17.9249f, 35.0f, 24.0f);
        this.f37302c.cubicTo(35.0f, 30.0751f, 30.0751f, 35.0f, 24.0f, 35.0f);
        this.f37302c.cubicTo(17.9249f, 35.0f, 13.0f, 30.0751f, 13.0f, 24.0f);
        this.f37302c.close();
        this.f37302c.moveTo(24.0f, 11.0f);
        this.f37302c.cubicTo(16.8203f, 11.0f, 11.0f, 16.8203f, 11.0f, 24.0f);
        this.f37302c.cubicTo(11.0f, 31.1797f, 16.8203f, 37.0f, 24.0f, 37.0f);
        this.f37302c.cubicTo(31.1797f, 37.0f, 37.0f, 31.1797f, 37.0f, 24.0f);
        this.f37302c.cubicTo(37.0f, 16.8203f, 31.1797f, 11.0f, 24.0f, 11.0f);
        this.f37302c.close();
        this.f37302c.moveTo(21.0f, 24.0f);
        this.f37302c.cubicTo(21.0f, 22.3431f, 22.3431f, 21.0f, 24.0f, 21.0f);
        this.f37302c.cubicTo(25.6569f, 21.0f, 27.0f, 22.3431f, 27.0f, 24.0f);
        this.f37302c.cubicTo(27.0f, 25.6569f, 25.6569f, 27.0f, 24.0f, 27.0f);
        this.f37302c.cubicTo(22.3431f, 27.0f, 21.0f, 25.6569f, 21.0f, 24.0f);
        this.f37302c.close();
        this.f37302c.moveTo(24.0f, 19.0f);
        this.f37302c.cubicTo(21.2386f, 19.0f, 19.0f, 21.2386f, 19.0f, 24.0f);
        this.f37302c.cubicTo(19.0f, 26.7614f, 21.2386f, 29.0f, 24.0f, 29.0f);
        this.f37302c.cubicTo(26.7614f, 29.0f, 29.0f, 26.7614f, 29.0f, 24.0f);
        this.f37302c.cubicTo(29.0f, 21.2386f, 26.7614f, 19.0f, 24.0f, 19.0f);
        this.f37302c.close();
        this.f37302c.moveTo(24.0f, 43.0f);
        this.f37302c.cubicTo(24.8284f, 43.0f, 25.5f, 42.3284f, 25.5f, 41.5f);
        this.f37302c.cubicTo(25.5f, 40.6716f, 24.8284f, 40.0f, 24.0f, 40.0f);
        this.f37302c.cubicTo(23.1716f, 40.0f, 22.5f, 40.6716f, 22.5f, 41.5f);
        this.f37302c.cubicTo(22.5f, 42.3284f, 23.1716f, 43.0f, 24.0f, 43.0f);
        this.f37302c.close();
        this.f37302c.moveTo(34.0492f, 9.59457f);
        this.f37302c.cubicTo(33.635f, 10.312f, 32.7176f, 10.5578f, 32.0002f, 10.1436f);
        this.f37302c.cubicTo(31.2828f, 9.72939f, 31.037f, 8.81201f, 31.4512f, 8.09457f);
        this.f37302c.cubicTo(31.8654f, 7.37713f, 32.7828f, 7.13132f, 33.5002f, 7.54553f);
        this.f37302c.cubicTo(34.2176f, 7.95975f, 34.4635f, 8.87713f, 34.0492f, 9.59457f);
        this.f37302c.close();
        this.f37302c.moveTo(14.5002f, 40.4545f);
        this.f37302c.cubicTo(15.2176f, 40.8687f, 16.135f, 40.6229f, 16.5492f, 39.9055f);
        this.f37302c.cubicTo(16.9635f, 39.188f, 16.7176f, 38.2707f, 16.0002f, 37.8564f);
        this.f37302c.cubicTo(15.2828f, 37.4422f, 14.3654f, 37.688f, 13.9512f, 38.4055f);
        this.f37302c.cubicTo(13.537f, 39.1229f, 13.7828f, 40.0403f, 14.5002f, 40.4545f);
        this.f37302c.close();
        this.f37302c.moveTo(29.9783f, 7.4845f);
        this.f37302c.cubicTo(29.7639f, 8.2847f, 28.9414f, 8.75957f, 28.1412f, 8.54516f);
        this.f37302c.cubicTo(27.341f, 8.33075f, 26.8661f, 7.50824f, 27.0805f, 6.70804f);
        this.f37302c.cubicTo(27.2949f, 5.90785f, 28.1174f, 5.43297f, 28.9176f, 5.64738f);
        this.f37302c.cubicTo(29.7178f, 5.8618f, 30.1927f, 6.6843f, 29.9783f, 7.4845f);
        this.f37302c.close();
        this.f37302c.moveTo(19.0826f, 42.3526f);
        this.f37302c.cubicTo(19.8828f, 42.567f, 20.7053f, 42.0921f, 20.9197f, 41.2919f);
        this.f37302c.cubicTo(21.1341f, 40.4917f, 20.6592f, 39.6692f, 19.859f, 39.4548f);
        this.f37302c.cubicTo(19.0588f, 39.2404f, 18.2363f, 39.7153f, 18.0219f, 40.5155f);
        this.f37302c.cubicTo(17.8075f, 41.3157f, 18.2824f, 42.1382f, 19.0826f, 42.3526f);
        this.f37302c.close();
        this.f37302c.moveTo(9.59445f, 13.951f);
        this.f37302c.cubicTo(10.3119f, 14.3652f, 10.5577f, 15.2826f, 10.1435f, 16.0f);
        this.f37302c.cubicTo(9.72927f, 16.7175f, 8.81189f, 16.9633f, 8.09445f, 16.5491f);
        this.f37302c.cubicTo(7.37701f, 16.1349f, 7.1312f, 15.2175f, 7.54541f, 14.5f);
        this.f37302c.cubicTo(7.95962f, 13.7826f, 8.87701f, 13.5368f, 9.59445f, 13.951f);
        this.f37302c.close();
        this.f37302c.moveTo(40.4545f, 33.5f);
        this.f37302c.cubicTo(40.8687f, 32.7826f, 40.6229f, 31.8652f, 39.9055f, 31.451f);
        this.f37302c.cubicTo(39.188f, 31.0368f, 38.2707f, 31.2826f, 37.8564f, 32.0f);
        this.f37302c.cubicTo(37.4422f, 32.7175f, 37.688f, 33.6349f, 38.4055f, 34.0491f);
        this.f37302c.cubicTo(39.1229f, 34.4633f, 40.0403f, 34.2175f, 40.4545f, 33.5f);
        this.f37302c.close();
        this.f37302c.moveTo(12.6864f, 10.5649f);
        this.f37302c.cubicTo(13.2722f, 11.1507f, 13.2722f, 12.1005f, 12.6864f, 12.6863f);
        this.f37302c.cubicTo(12.1006f, 13.2721f, 11.1508f, 13.2721f, 10.5651f, 12.6863f);
        this.f37302c.cubicTo(9.97927f, 12.1005f, 9.97927f, 11.1507f, 10.5651f, 10.5649f);
        this.f37302c.cubicTo(11.1508f, 9.97916f, 12.1006f, 9.97916f, 12.6864f, 10.5649f);
        this.f37302c.close();
        this.f37302c.moveTo(37.4349f, 37.4351f);
        this.f37302c.cubicTo(38.0207f, 36.8493f, 38.0207f, 35.8995f, 37.4349f, 35.3137f);
        this.f37302c.cubicTo(36.8491f, 34.7279f, 35.8994f, 34.7279f, 35.3136f, 35.3137f);
        this.f37302c.cubicTo(34.7278f, 35.8995f, 34.7278f, 36.8493f, 35.3136f, 37.4351f);
        this.f37302c.cubicTo(35.8994f, 38.0208f, 36.8491f, 38.0208f, 37.4349f, 37.4351f);
        this.f37302c.close();
        this.f37302c.moveTo(16.5492f, 8.09457f);
        this.f37302c.cubicTo(16.9635f, 8.81201f, 16.7176f, 9.72939f, 16.0002f, 10.1436f);
        this.f37302c.cubicTo(15.2828f, 10.5578f, 14.3654f, 10.312f, 13.9512f, 9.59457f);
        this.f37302c.cubicTo(13.537f, 8.87713f, 13.7828f, 7.95975f, 14.5002f, 7.54553f);
        this.f37302c.cubicTo(15.2176f, 7.13132f, 16.135f, 7.37713f, 16.5492f, 8.09457f);
        this.f37302c.close();
        this.f37302c.moveTo(33.5002f, 40.4545f);
        this.f37302c.cubicTo(34.2176f, 40.0403f, 34.4635f, 39.1229f, 34.0492f, 38.4055f);
        this.f37302c.cubicTo(33.635f, 37.688f, 32.7176f, 37.4422f, 32.0002f, 37.8564f);
        this.f37302c.cubicTo(31.2828f, 38.2707f, 31.037f, 39.188f, 31.4512f, 39.9055f);
        this.f37302c.cubicTo(31.8654f, 40.6229f, 32.7828f, 40.8687f, 33.5002f, 40.4545f);
        this.f37302c.close();
        this.f37302c.moveTo(20.9198f, 6.70808f);
        this.f37302c.cubicTo(21.1342f, 7.50828f, 20.6593f, 8.33078f, 19.8591f, 8.54519f);
        this.f37302c.cubicTo(19.0589f, 8.75961f, 18.2364f, 8.28473f, 18.022f, 7.48453f);
        this.f37302c.cubicTo(17.8076f, 6.68433f, 18.2825f, 5.86183f, 19.0827f, 5.64742f);
        this.f37302c.cubicTo(19.8829f, 5.433f, 20.7054f, 5.90788f, 20.9198f, 6.70808f);
        this.f37302c.close();
        this.f37302c.moveTo(28.9177f, 42.3526f);
        this.f37302c.cubicTo(29.7179f, 42.1382f, 30.1928f, 41.3156f, 29.9784f, 40.5154f);
        this.f37302c.cubicTo(29.764f, 39.7152f, 28.9415f, 39.2404f, 28.1413f, 39.4548f);
        this.f37302c.cubicTo(27.3411f, 39.6692f, 26.8662f, 40.4917f, 27.0806f, 41.2919f);
        this.f37302c.cubicTo(27.295f, 42.0921f, 28.1175f, 42.567f, 28.9177f, 42.3526f);
        this.f37302c.close();
        this.f37302c.moveTo(7.48462f, 18.0218f);
        this.f37302c.cubicTo(8.28482f, 18.2362f, 8.7597f, 19.0587f, 8.54528f, 19.8589f);
        this.f37302c.cubicTo(8.33087f, 20.6591f, 7.50837f, 21.134f, 6.70817f, 20.9195f);
        this.f37302c.cubicTo(5.90797f, 20.7051f, 5.43309f, 19.8826f, 5.64751f, 19.0824f);
        this.f37302c.cubicTo(5.86192f, 18.2822f, 6.68442f, 17.8074f, 7.48462f, 18.0218f);
        this.f37302c.close();
        this.f37302c.moveTo(42.3524f, 28.9175f);
        this.f37302c.cubicTo(42.5668f, 28.1173f, 42.0919f, 27.2948f, 41.2918f, 27.0804f);
        this.f37302c.cubicTo(40.4916f, 26.866f, 39.669f, 27.3409f, 39.4546f, 28.1411f);
        this.f37302c.cubicTo(39.2402f, 28.9413f, 39.7151f, 29.7638f, 40.5153f, 29.9782f);
        this.f37302c.cubicTo(41.3155f, 30.1926f, 42.138f, 29.7177f, 42.3524f, 28.9175f);
        this.f37302c.close();
        this.f37302c.moveTo(10.5648f, 35.3137f);
        this.f37302c.cubicTo(11.1506f, 34.728f, 12.1004f, 34.728f, 12.6861f, 35.3137f);
        this.f37302c.cubicTo(13.2719f, 35.8995f, 13.2719f, 36.8493f, 12.6861f, 37.4351f);
        this.f37302c.cubicTo(12.1004f, 38.0209f, 11.1506f, 38.0209f, 10.5648f, 37.4351f);
        this.f37302c.cubicTo(9.97904f, 36.8493f, 9.97904f, 35.8995f, 10.5648f, 35.3137f);
        this.f37302c.close();
        this.f37302c.moveTo(37.4352f, 10.5649f);
        this.f37302c.cubicTo(36.8494f, 9.97912f, 35.8996f, 9.97912f, 35.3139f, 10.5649f);
        this.f37302c.cubicTo(34.7281f, 11.1507f, 34.7281f, 12.1004f, 35.3139f, 12.6862f);
        this.f37302c.cubicTo(35.8996f, 13.272f, 36.8494f, 13.272f, 37.4352f, 12.6862f);
        this.f37302c.cubicTo(38.021f, 12.1004f, 38.021f, 11.1507f, 37.4352f, 10.5649f);
        this.f37302c.close();
        this.f37302c.moveTo(8.09445f, 31.4509f);
        this.f37302c.cubicTo(8.81189f, 31.0367f, 9.72927f, 31.2825f, 10.1435f, 31.9999f);
        this.f37302c.cubicTo(10.5577f, 32.7174f, 10.3119f, 33.6347f, 9.59445f, 34.049f);
        this.f37302c.cubicTo(8.87701f, 34.4632f, 7.95962f, 34.2174f, 7.54541f, 33.4999f);
        this.f37302c.cubicTo(7.1312f, 32.7825f, 7.37701f, 31.8651f, 8.09445f, 31.4509f);
        this.f37302c.close();
        this.f37302c.moveTo(40.4545f, 14.5001f);
        this.f37302c.cubicTo(40.0403f, 13.7827f, 39.1229f, 13.5368f, 38.4055f, 13.9511f);
        this.f37302c.cubicTo(37.688f, 14.3653f, 37.4422f, 15.2827f, 37.8564f, 16.0001f);
        this.f37302c.cubicTo(38.2707f, 16.7175f, 39.188f, 16.9633f, 39.9055f, 16.5491f);
        this.f37302c.cubicTo(40.6229f, 16.1349f, 40.8687f, 15.2175f, 40.4545f, 14.5001f);
        this.f37302c.close();
        this.f37302c.moveTo(6.70808f, 27.0802f);
        this.f37302c.cubicTo(7.50828f, 26.8658f, 8.33078f, 27.3407f, 8.54519f, 28.1409f);
        this.f37302c.cubicTo(8.75961f, 28.9411f, 8.28473f, 29.7636f, 7.48453f, 29.978f);
        this.f37302c.cubicTo(6.68433f, 30.1924f, 5.86183f, 29.7175f, 5.64742f, 28.9173f);
        this.f37302c.cubicTo(5.433f, 28.1171f, 5.90788f, 27.2946f, 6.70808f, 27.0802f);
        this.f37302c.close();
        this.f37302c.moveTo(42.3528f, 19.0822f);
        this.f37302c.cubicTo(42.1384f, 18.282f, 41.3159f, 17.8071f, 40.5157f, 18.0216f);
        this.f37302c.cubicTo(39.7155f, 18.236f, 39.2406f, 19.0585f, 39.455f, 19.8587f);
        this.f37302c.cubicTo(39.6694f, 20.6589f, 40.492f, 21.1337f, 41.2921f, 20.9193f);
        this.f37302c.cubicTo(42.0924f, 20.7049f, 42.5672f, 19.8824f, 42.3528f, 19.0822f);
        this.f37302c.close();
        this.f37302c.moveTo(6.5f, 22.4998f);
        this.f37302c.cubicTo(7.32843f, 22.4998f, 8.0f, 23.1713f, 8.0f, 23.9998f);
        this.f37302c.cubicTo(8.0f, 24.8282f, 7.32843f, 25.4998f, 6.5f, 25.4998f);
        this.f37302c.cubicTo(5.67157f, 25.4998f, 5.0f, 24.8282f, 5.0f, 23.9998f);
        this.f37302c.cubicTo(5.0f, 23.1713f, 5.67157f, 22.4998f, 6.5f, 22.4998f);
        this.f37302c.close();
        this.f37302c.moveTo(43.0f, 23.9998f);
        this.f37302c.cubicTo(43.0f, 23.1714f, 42.3284f, 22.4998f, 41.5f, 22.4998f);
        this.f37302c.cubicTo(40.6716f, 22.4998f, 40.0f, 23.1714f, 40.0f, 23.9998f);
        this.f37302c.cubicTo(40.0f, 24.8282f, 40.6716f, 25.4998f, 41.5f, 25.4998f);
        this.f37302c.cubicTo(42.3284f, 25.4998f, 43.0f, 24.8282f, 43.0f, 23.9998f);
        this.f37302c.close();
        this.f37302c.setFillType(Path.FillType.EVEN_ODD);
        this.f37301b.setStyle(Paint.Style.FILL);
        this.f37301b.setColor(-16777216);
    }

    @Override // com.bytedance.p1084h.AbstractC15287a
    /* renamed from: a */
    public final void mo24795a(Canvas canvas) {
        mo24796a(canvas, 48.0f);
        canvas.drawPath(this.f37302c, this.f37301b);
    }
}
