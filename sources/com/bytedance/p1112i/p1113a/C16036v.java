package com.bytedance.p1112i.p1113a;

import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import com.bytedance.covode.number.Covode;
import com.bytedance.p1084h.AbstractC15287a;

/* renamed from: com.bytedance.i.a.v */
public class C16036v extends AbstractC15287a {
    static {
        Covode.recordClassIndex(18302);
    }

    @Override // com.bytedance.p1084h.AbstractC15287a
    /* renamed from: a */
    public final void mo24794a() {
        this.f37302c.moveTo(25.625f, 6.125f);
        this.f37302c.cubicTo(25.625f, 7.02246f, 24.8975f, 7.75f, 24.0f, 7.75f);
        this.f37302c.cubicTo(23.1025f, 7.75f, 22.375f, 7.02246f, 22.375f, 6.125f);
        this.f37302c.cubicTo(22.375f, 5.22754f, 23.1025f, 4.5f, 24.0f, 4.5f);
        this.f37302c.cubicTo(24.8975f, 4.5f, 25.625f, 5.22754f, 25.625f, 6.125f);
        this.f37302c.close();
        this.f37302c.moveTo(20.75f, 17.3897f);
        this.f37302c.lineTo(20.75f, 30.6744f);
        this.f37302c.lineTo(30.7135f, 24.2218f);
        this.f37302c.lineTo(20.75f, 17.3897f);
        this.f37302c.close();
        this.f37302c.moveTo(18.5833f, 16.3615f);
        this.f37302c.cubicTo(18.5833f, 15.054f, 20.049f, 14.2819f, 21.1273f, 15.0213f);
        this.f37302c.lineTo(32.6091f, 22.8945f);
        this.f37302c.cubicTo(33.5655f, 23.5504f, 33.5468f, 24.9683f, 32.5734f, 25.5987f);
        this.f37302c.lineTo(21.0917f, 33.0345f);
        this.f37302c.cubicTo(20.0105f, 33.7347f, 18.5833f, 32.9586f, 18.5833f, 31.6705f);
        this.f37302c.lineTo(18.5833f, 16.3615f);
        this.f37302c.close();
        this.f37302c.moveTo(24.0f, 43.5f);
        this.f37302c.cubicTo(24.8975f, 43.5f, 25.625f, 42.7725f, 25.625f, 41.875f);
        this.f37302c.cubicTo(25.625f, 40.9775f, 24.8975f, 40.25f, 24.0f, 40.25f);
        this.f37302c.cubicTo(23.1025f, 40.25f, 22.375f, 40.9775f, 22.375f, 41.875f);
        this.f37302c.cubicTo(22.375f, 42.7725f, 23.1025f, 43.5f, 24.0f, 43.5f);
        this.f37302c.close();
        this.f37302c.moveTo(30.196f, 7.15465f);
        this.f37302c.cubicTo(29.9637f, 8.02153f, 29.0727f, 8.53598f, 28.2058f, 8.3037f);
        this.f37302c.cubicTo(27.3389f, 8.07142f, 26.8245f, 7.18037f, 27.0567f, 6.31349f);
        this.f37302c.cubicTo(27.289f, 5.4466f, 28.1801f, 4.93216f, 29.047f, 5.16444f);
        this.f37302c.cubicTo(29.9138f, 5.39672f, 30.4283f, 6.28776f, 30.196f, 7.15465f);
        this.f37302c.close();
        this.f37302c.moveTo(18.953f, 42.8355f);
        this.f37302c.cubicTo(19.8199f, 43.0678f, 20.711f, 42.5533f, 20.9432f, 41.6864f);
        this.f37302c.cubicTo(21.1755f, 40.8195f, 20.6611f, 39.9285f, 19.7942f, 39.6962f);
        this.f37302c.cubicTo(18.9273f, 39.4639f, 18.0363f, 39.9784f, 17.804f, 40.8453f);
        this.f37302c.cubicTo(17.5717f, 41.7121f, 18.0861f, 42.6032f, 18.953f, 42.8355f);
        this.f37302c.close();
        this.f37302c.moveTo(34.3448f, 9.33238f);
        this.f37302c.cubicTo(33.896f, 10.1096f, 32.9022f, 10.3759f, 32.125f, 9.92717f);
        this.f37302c.cubicTo(31.3477f, 9.47844f, 31.0814f, 8.48461f, 31.5302f, 7.70738f);
        this.f37302c.cubicTo(31.9789f, 6.93016f, 32.9727f, 6.66386f, 33.75f, 7.11259f);
        this.f37302c.cubicTo(34.5272f, 7.56132f, 34.7935f, 8.55516f, 34.3448f, 9.33238f);
        this.f37302c.close();
        this.f37302c.moveTo(14.25f, 40.8873f);
        this.f37302c.cubicTo(15.0272f, 41.3361f, 16.021f, 41.0698f, 16.4698f, 40.2925f);
        this.f37302c.cubicTo(16.9185f, 39.5153f, 16.6522f, 38.5215f, 15.875f, 38.0728f);
        this.f37302c.cubicTo(15.0977f, 37.624f, 14.1039f, 37.8903f, 13.6552f, 38.6675f);
        this.f37302c.cubicTo(13.2064f, 39.4448f, 13.4727f, 40.4386f, 14.25f, 40.8873f);
        this.f37302c.close();
        this.f37302c.moveTo(37.7886f, 12.5095f);
        this.f37302c.cubicTo(37.1539f, 13.1441f, 36.1251f, 13.1441f, 35.4905f, 12.5095f);
        this.f37302c.cubicTo(34.8559f, 11.8749f, 34.8559f, 10.846f, 35.4905f, 10.2114f);
        this.f37302c.cubicTo(36.1251f, 9.57682f, 37.1539f, 9.57682f, 37.7886f, 10.2114f);
        this.f37302c.cubicTo(38.4232f, 10.846f, 38.4232f, 11.8749f, 37.7886f, 12.5095f);
        this.f37302c.close();
        this.f37302c.moveTo(10.2114f, 37.7885f);
        this.f37302c.cubicTo(10.846f, 38.4231f, 11.8749f, 38.4231f, 12.5095f, 37.7885f);
        this.f37302c.cubicTo(13.1441f, 37.1539f, 13.1441f, 36.125f, 12.5095f, 35.4904f);
        this.f37302c.cubicTo(11.8749f, 34.8558f, 10.846f, 34.8558f, 10.2114f, 35.4904f);
        this.f37302c.cubicTo(9.57684f, 36.125f, 9.57684f, 37.1539f, 10.2114f, 37.7885f);
        this.f37302c.close();
        this.f37302c.moveTo(40.2926f, 16.4698f);
        this.f37302c.cubicTo(39.5154f, 16.9185f, 38.5216f, 16.6522f, 38.0728f, 15.875f);
        this.f37302c.cubicTo(37.6241f, 15.0977f, 37.8904f, 14.1039f, 38.6676f, 13.6552f);
        this.f37302c.cubicTo(39.4448f, 13.2064f, 40.4387f, 13.4727f, 40.8874f, 14.25f);
        this.f37302c.cubicTo(41.3361f, 15.0272f, 41.0698f, 16.021f, 40.2926f, 16.4698f);
        this.f37302c.close();
        this.f37302c.moveTo(7.11253f, 33.75f);
        this.f37302c.cubicTo(7.56126f, 34.5272f, 8.5551f, 34.7935f, 9.33232f, 34.3448f);
        this.f37302c.cubicTo(10.1095f, 33.896f, 10.3758f, 32.9022f, 9.92711f, 32.125f);
        this.f37302c.cubicTo(9.47838f, 31.3477f, 8.48455f, 31.0814f, 7.70732f, 31.5302f);
        this.f37302c.cubicTo(6.9301f, 31.9789f, 6.6638f, 32.9727f, 7.11253f, 33.75f);
        this.f37302c.close();
        this.f37302c.moveTo(41.6865f, 20.9432f);
        this.f37302c.cubicTo(40.8196f, 21.1755f, 39.9285f, 20.661f, 39.6963f, 19.7942f);
        this.f37302c.cubicTo(39.464f, 18.9273f, 39.9784f, 18.0362f, 40.8453f, 17.8039f);
        this.f37302c.cubicTo(41.7122f, 17.5717f, 42.6032f, 18.0861f, 42.8355f, 18.953f);
        this.f37302c.cubicTo(43.0678f, 19.8199f, 42.5534f, 20.7109f, 41.6865f, 20.9432f);
        this.f37302c.close();
        this.f37302c.moveTo(5.16449f, 29.0469f);
        this.f37302c.cubicTo(5.39677f, 29.9138f, 6.28782f, 30.4282f, 7.1547f, 30.196f);
        this.f37302c.cubicTo(8.02158f, 29.9637f, 8.53603f, 29.0726f, 8.30375f, 28.2058f);
        this.f37302c.cubicTo(8.07147f, 27.3389f, 7.18042f, 26.8244f, 6.31354f, 27.0567f);
        this.f37302c.cubicTo(5.44666f, 27.289f, 4.93221f, 28.18f, 5.16449f, 29.0469f);
        this.f37302c.close();
        this.f37302c.moveTo(41.875f, 25.625f);
        this.f37302c.cubicTo(40.9775f, 25.625f, 40.25f, 24.8975f, 40.25f, 24.0f);
        this.f37302c.cubicTo(40.25f, 23.1025f, 40.9775f, 22.375f, 41.875f, 22.375f);
        this.f37302c.cubicTo(42.7725f, 22.375f, 43.5f, 23.1025f, 43.5f, 24.0f);
        this.f37302c.cubicTo(43.5f, 24.8975f, 42.7725f, 25.625f, 41.875f, 25.625f);
        this.f37302c.close();
        this.f37302c.moveTo(4.5f, 24.0f);
        this.f37302c.cubicTo(4.5f, 24.8975f, 5.22754f, 25.625f, 6.125f, 25.625f);
        this.f37302c.cubicTo(7.02246f, 25.625f, 7.75f, 24.8975f, 7.75f, 24.0f);
        this.f37302c.cubicTo(7.75f, 23.1025f, 7.02246f, 22.375f, 6.125f, 22.375f);
        this.f37302c.cubicTo(5.22754f, 22.375f, 4.5f, 23.1025f, 4.5f, 24.0f);
        this.f37302c.close();
        this.f37302c.moveTo(40.8454f, 30.1961f);
        this.f37302c.cubicTo(39.9785f, 29.9639f, 39.464f, 29.0728f, 39.6963f, 28.2059f);
        this.f37302c.cubicTo(39.9286f, 27.339f, 40.8196f, 26.8246f, 41.6865f, 27.0569f);
        this.f37302c.cubicTo(42.5534f, 27.2892f, 43.0678f, 28.1802f, 42.8356f, 29.0471f);
        this.f37302c.cubicTo(42.6033f, 29.914f, 41.7122f, 30.4284f, 40.8454f, 30.1961f);
        this.f37302c.close();
        this.f37302c.moveTo(5.16439f, 18.9532f);
        this.f37302c.cubicTo(4.93211f, 19.82f, 5.44656f, 20.7111f, 6.31344f, 20.9434f);
        this.f37302c.cubicTo(7.18032f, 21.1756f, 8.07137f, 20.6612f, 8.30365f, 19.7943f);
        this.f37302c.cubicTo(8.53593f, 18.9274f, 8.02149f, 18.0364f, 7.1546f, 17.8041f);
        this.f37302c.cubicTo(6.28772f, 17.5718f, 5.39667f, 18.0863f, 5.16439f, 18.9532f);
        this.f37302c.close();
        this.f37302c.moveTo(38.6678f, 34.345f);
        this.f37302c.cubicTo(37.8905f, 33.8963f, 37.6242f, 32.9025f, 38.073f, 32.1252f);
        this.f37302c.cubicTo(38.5217f, 31.348f, 39.5155f, 31.0817f, 40.2928f, 31.5304f);
        this.f37302c.cubicTo(41.07f, 31.9792f, 41.3363f, 32.973f, 40.8875f, 33.7502f);
        this.f37302c.cubicTo(40.4388f, 34.5275f, 39.445f, 34.7938f, 38.6678f, 34.345f);
        this.f37302c.close();
        this.f37302c.moveTo(7.11253f, 14.2502f);
        this.f37302c.cubicTo(6.6638f, 15.0275f, 6.9301f, 16.0213f, 7.70732f, 16.47f);
        this.f37302c.cubicTo(8.48455f, 16.9187f, 9.47838f, 16.6525f, 9.92711f, 15.8752f);
        this.f37302c.cubicTo(10.3758f, 15.098f, 10.1095f, 14.1042f, 9.33232f, 13.6554f);
        this.f37302c.cubicTo(8.5551f, 13.2067f, 7.56126f, 13.473f, 7.11253f, 14.2502f);
        this.f37302c.close();
        this.f37302c.moveTo(35.4905f, 37.7888f);
        this.f37302c.cubicTo(34.8559f, 37.1542f, 34.8559f, 36.1253f, 35.4905f, 35.4907f);
        this.f37302c.cubicTo(36.1251f, 34.8561f, 37.154f, 34.8561f, 37.7886f, 35.4907f);
        this.f37302c.cubicTo(38.4232f, 36.1253f, 38.4232f, 37.1542f, 37.7886f, 37.7888f);
        this.f37302c.cubicTo(37.154f, 38.4234f, 36.1251f, 38.4234f, 35.4905f, 37.7888f);
        this.f37302c.close();
        this.f37302c.moveTo(10.2115f, 10.2117f);
        this.f37302c.cubicTo(9.57686f, 10.8463f, 9.57686f, 11.8752f, 10.2115f, 12.5098f);
        this.f37302c.cubicTo(10.8461f, 13.1444f, 11.875f, 13.1444f, 12.5096f, 12.5098f);
        this.f37302c.cubicTo(13.1442f, 11.8752f, 13.1442f, 10.8463f, 12.5096f, 10.2117f);
        this.f37302c.cubicTo(11.875f, 9.57711f, 10.8461f, 9.57711f, 10.2115f, 10.2117f);
        this.f37302c.close();
        this.f37302c.moveTo(31.5302f, 40.2929f);
        this.f37302c.cubicTo(31.0815f, 39.5157f, 31.3478f, 38.5218f, 32.125f, 38.0731f);
        this.f37302c.cubicTo(32.9023f, 37.6244f, 33.8961f, 37.8907f, 34.3448f, 38.6679f);
        this.f37302c.cubicTo(34.7936f, 39.4451f, 34.5273f, 40.4389f, 33.75f, 40.8877f);
        this.f37302c.cubicTo(32.9728f, 41.3364f, 31.979f, 41.0701f, 31.5302f, 40.2929f);
        this.f37302c.close();
        this.f37302c.moveTo(14.25f, 7.11293f);
        this.f37302c.cubicTo(13.4728f, 7.56166f, 13.2065f, 8.55549f, 13.6552f, 9.33272f);
        this.f37302c.cubicTo(14.104f, 10.1099f, 15.0978f, 10.3762f, 15.875f, 9.92751f);
        this.f37302c.cubicTo(16.6523f, 9.47878f, 16.9186f, 8.48494f, 16.4698f, 7.70772f);
        this.f37302c.cubicTo(16.0211f, 6.93049f, 15.0273f, 6.6642f, 14.25f, 7.11293f);
        this.f37302c.close();
        this.f37302c.moveTo(27.0568f, 41.6866f);
        this.f37302c.cubicTo(26.8245f, 40.8197f, 27.339f, 39.9287f, 28.2058f, 39.6964f);
        this.f37302c.cubicTo(29.0727f, 39.4641f, 29.9638f, 39.9786f, 30.1961f, 40.8455f);
        this.f37302c.cubicTo(30.4283f, 41.7123f, 29.9139f, 42.6034f, 29.047f, 42.8357f);
        this.f37302c.cubicTo(28.1801f, 43.0679f, 27.2891f, 42.5535f, 27.0568f, 41.6866f);
        this.f37302c.close();
        this.f37302c.moveTo(18.9531f, 5.16489f);
        this.f37302c.cubicTo(18.0862f, 5.39717f, 17.5718f, 6.28822f, 17.804f, 7.1551f);
        this.f37302c.cubicTo(18.0363f, 8.02198f, 18.9274f, 8.53643f, 19.7942f, 8.30415f);
        this.f37302c.cubicTo(20.6611f, 8.07187f, 21.1756f, 7.18082f, 20.9433f, 6.31394f);
        this.f37302c.cubicTo(20.711f, 5.44705f, 19.82f, 4.93261f, 18.9531f, 5.16489f);
        this.f37302c.close();
        this.f37302c.setFillType(Path.FillType.EVEN_ODD);
        this.f37301b.setStyle(Paint.Style.FILL);
        this.f37301b.setColor(-16777216);
    }

    @Override // com.bytedance.p1084h.AbstractC15287a
    /* renamed from: a */
    public final void mo24795a(Canvas canvas) {
        mo24796a(canvas, 48.0f);
        canvas.drawPath(this.f37302c, this.f37301b);
    }
}
